name: Release

on: 
  release:
    types: published

jobs:
  build:
    strategy:
      fail-fast: false

      matrix:
        os:
          - macos-latest
          - ubuntu-latest

        ocaml-compiler:
          - 4.12.x

    runs-on: ${{ matrix.os }}

    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: avsm/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: ${{ matrix.os != 'macos-latest' }}

      - name: Use Node.js 12.x
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Fetch git tags
        run: git fetch --tags --force

      - name: Install opam packages
        run: opam install .
          
      - name: Substitute watermarks
        run: opam exec -- dune subst

      - name: Run build
        run: opam exec -- dune build --release

      - name: Substitute watermarks
        run: opam exec -- dune subst

      - name: Build
        run: opam exec -- dune build --release

      - name: Upload _release
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@master
        with:
          name: _release
          path: _release

      - name: Upload artifacts for ${{ matrix.os }}
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.os }}
          path: _build/default/bin/main.exe

  publish:
    needs: build
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Download _release
        uses: actions/download-artifact@master
        with:
          name: _release
          path: _release

      - name: Download linux artifacts
        uses: actions/download-artifact@master
        with:
          name: ubuntu-latest
          path: _release/platform-linux-x64

      - name: Download macOS artifacts
        uses: actions/download-artifact@master
        with:
          name: macos-latest
          path: _release/platform-darwin-x64

      - name: Create archives for Github release
        run: |
          cd _release/platform-darwin-x64
          zip -r ../../spin-darwin-x64.zip .
          cd ../..

          cd _release/platform-linux-x64
          zip -r ../../spin-linux-x64.zip .
          cd ../..

      - name: Upload spin-darwin-x64.zip to Github release 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: spin-darwin-x64.zip
          asset_name: spin-darwin-x64.zip
          asset_content_type: application/gzip

      - name: Upload spin-linux-x64.zip to Github release 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: spin-linux-x64.zip
          asset_name: spin-linux-x64.zip
          asset_content_type: application/gzip

      - name: Upload spin-windows-x64.zip to Github release 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: spin-windows-x64.zip
          asset_name: spin-windows-x64.zip
          asset_content_type: application/gzip
