(lang dune 2.0)
; The line above is the version of the syntax, not the actual version of the Dune binary
; used. All of the Dune version after 2.0 will be retro-compatible.

; The name of the Dune project. Not to be confused with the name of the package,
; which is defined below: they can be different.
(name hello)

; The URL where the documentation is deployed.
; If you release the package with dune-release (see `release` in the Makefile), 
; it will ask you to deploy the documentation at this address.
(documentation "https://username.github.io/hello/")

; The remote repository where the sources are hosted. This is used by opam, for instance
; to add a link to the repository in the package page at `opam.ocaml.org`.
(source
 (github username/hello))

; The license of the project.
(license ISC)

; The names of the authors of the project, typically, all of the main contributors.
(authors "Your name")

; The names of the current maintainers of the project.
(maintainers "Your name")

; This tells dune to generate the `.opam` files for each package listed below.
; If you prefer to manage your opam files yourself, you can delete this line and
; edit the opam files directly.
; If you need to add a field in the opam file that is not handled by dune, you can also
; create a `hello.opam.template` file with the additionnal fields you'd like to generate.
(generate_opam_files true)

; This is used to generate the `hello.opam` file.
(package
 (name hello)
 (synopsis "A short description of the project")
 (description "A short description of the project")
 (depends
  (ocaml
   (>= 4.08.0))
  dune
  ; You can tag dependencies with `:with-test`, `:with-doc`, or `:build`.
  ; This will be used by the different tools and users that read the opam metadata.
  ; For instance, users that want to install your package without the test will do
  ; do so without the `--with-test` in the `opam install` command. But the CI, which
  ; needs to run the unit tests, will run `opam install . --with-test`.
  (alcotest :with-test)
  (odoc :with-doc)))
